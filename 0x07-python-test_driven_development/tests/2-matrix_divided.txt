Tests to show the matrix_divided function works

Import Python module 
>>> file = __import__("2-matrix_divided")
>>> matrix_divided = file.matrix_divided

#Tests to show the function works
>>> matrix1 = [[1, 2, 3],[4, 5, 6]]
>>> matrix2 = [[1, "Odd", 3],[4, 5, 6]]
>>> matrix3 = [[1, 2, 3],[4, 6]]

>>> matrix_divided(matrix1, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

#Tests to show the function handles errors
>>> matrix_divided(matrix1, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/timix/Documents/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

>>> matrix_divided(matrix2, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/timix/Documents/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise TypeError("matrix must be a matrix "
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix1, "")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/timix/Documents/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 14, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number

>>> matrix_divided(matrix3, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/timix/Documents/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 23, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
